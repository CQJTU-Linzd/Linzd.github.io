### 鸟随鸾凤飞腾远  人伴贤良品自高

## 2022.2.18  
在Github创建个人网站  
感谢苏秉楷，感谢Carl  

## 2022.2.18
这两天跟着Carl学了回溯算法。
回溯算法本质上就是暴力搜索，即仍为遍历，适用于解决排列、组合、子集一类的问题，其使用离不开递归调用。
for循环表示横向遍历，递归表示纵向遍历，直到遍历到叶子节点为止。  
  
回溯算法模板如下：  

void backtracking(vector<int>& v,vector<int>& vpath, int startIndex...)  
{  
  if(终止条件，例如vpath的大小达到题目要求，或者vpath中元素之和符合条件)  
  {  
     for(int i = 0; i < vpath.size(); i++)  
     {  
        cout << vpath[i]<< " ";  
     }  
     cout << endl;  
     return;  
  }  
  
  for(int i = startIndex; i < v.size(); i++)  
  {  
    //处理节点，例如vpath.pushback(v[i])，sum+=v[i]等  
  
    //递归  
    backtracking(v,vpath,startIndex...)//注意传入i还是i+1  
  
    //回溯  
    vpath.pop_back();  
    sum-=v[i];  
  }  
}  

2022.2.19  
在B站学会了怎么在overleaf打印出生僻字，并尝试写出一篇论文(材料是抄的)。  
问题: 1.摘要的Abstract怎么打印成中文;  
      2.小标题下怎么分点；  
      
2022.2.20
花了大半个晚上琢磨链表，还算满意。  
参考代码随想录的写法，独自写出了leetcode交换链表相邻两节点那道题。但是代码应该仍有改进的地方：对末尾几个节点的处理能否统一，即不根据链表的size就实现末尾节点的交换(偶数个就要把最后两个交换，奇数个就把倒数第二第三交换，最后一个不换)。  
     
2022.2.20晚23：09  
  简单看了一下哈希表，主要用来判断一个元素是否存在于集合中，其中unordered_set容器既可以排序，又可以去重。  
  注意包含头文件#include<unordered_set>;  
  构造函数：unordered_set<int> set(v.begin(), v.end());  
  
  还学会了一种for循环条件写法：  
  for(int i : set)//i表示set容器中的具体元素  
  {  
    if(set1.find(i)!=set1.end())//判断set中的元素是否出现在set1容器中，如果存在，返回当前元素的迭代器，否则返回.end()  
    ...  
  }  
  
 2022.2.21晚19：50  
 比较两个数a，b中哪一个距离第三个数c更近，即比较a-c和b-c的绝对值哪个更小。  
 #include<cmath>
 if(fabs(a-c)<fabs(b-c))，说明a距离c更近。  
 
 2022.2.23晚23：44  
 今儿个刷了两道题(删除链表中的重复项和删除数组中的重复项)，感觉整体思路和官解基本一样，可以想到用双指针来解决问题，
 但是一些细节的(或者说是关键的)代码，还是无法像官解那么简洁，感觉得有很强的归纳能力才能想到这样的解法，当时自己做的时候就没看出来，然后越写越复杂，最后研究了一下官解后不禁感慨“这谁想得到啊？”
 
 2022.2.26晚21：32
 时隔一个寒假，回到学校重新登陆CG，发现一道以前做过的题(删除子串)，当时第一反应是KMP算法或者是双指针，然后打开VS尝试了一下，最后比较顺利地用双指针解决了，不得不感谢Carl啊。
 
 2022.2.27 16：51
 今天下午看到CG平台上的蓝桥杯大赛练习，其中有一道叫整数的分割，进去一看题目，第一反应就是回溯算法，试了一下真的能成功，但也进一步看清了回溯算法耗费时间之长，可以通过加一些限定条件，让编译器不再进行无用的遍历。

 2022.2.28 晚10：07
 今晚在看数据结构和算法网课的时候，突然来了灵感，就是用map容器解决多项式相乘问题，最后很成功地写出。
 问题：multimap<int, int, MyCompare>为什么会报错？(但是用multimap<int, int, greater<int>>能实现降序排序)
 
 2022.3.3 早10：23
 早上写了一道题，就是调整数组顺序使奇数在前，偶数在后。使用了deque容器解决。
 问题：deque<int> d;

	for (int i = 0; i < 10; i++)
	{
		d.push_back(i);
	}

	deque<int>::iterator it = d.begin();
	deque<int>::iterator itTemp = it;
	it = it + 1;
	d.push_front(*itTemp);
	d.erase(itTemp);
  即在容器前端添加一个元素，大小为第一个元素，然后删除原来的第一个元素。
  为什么程序会崩溃？
 
 2022.3.5晚23：44
 这两天的总结：
 CG平台的第二题文件操作不会；
 在编程群里问的题，也就是上边儿那个问题，两天没人鸟我，我就当他们不会了，但是老师也不给个回应是什么意思？
 类和对象中，如果变量a是new出来的数据，那么在析构函数中delete要加[];
 这两天把之前苏秉楷分享给我的网站连同代码随想录一起介绍给了廖于，希望对她有点用。
 
 2022.3.6早9：29
 早上看到狗哥的Github里写了我前两天问他的问题，挺意外，看来我这个问题确实对他有影响。
 刚刚做完一道剑指offer(变位词)，写完以后老是出问题，最后发现又是最开始的赋值写错了。
 
 2022.3.8晚11：02
 今晚做了一下CG布置的类和对象编程题，第一题已经把答案都输出出来了，但是平台检测的时候把汉字全都变成了问号，
 问了下老师，说是版本的问题，让我去百度怎么解决汉字乱码问题，同时也把自己的代码发给老师看。

 2022.3.9晚20：53
 代码发给蒋老师一天了，又不鸟我，真不知道这小子是忘了还是怎么着。
 
 这学期的一个小小愿望：考个专业第一玩一下。
 可惜，到现在还不知道上次期末专业第一是哪位大佬，我和他差了多少，一概不知。但是，不影响，按自己的节奏，往这个目标尽力去冲就得了，就算没有第一，第二第三也不错。
 当然，不能再像高中那样被分数束缚，有更多有意思的东西需要去学啊。到目前为止，已经自学了C++面向对象，STL，MATLAB，FL Studio、Github、Latex，开始坚持刷Leetcode，学算法，
 看了《郭论》、《七侠五义》、《重庆通史》、《我的前半生》...文史、专业、办公、娱乐，从这些东西里学到了很多别人一辈子都见不到的东西，这些都是相当有助于增强自信的。
 上学期大一刚开学，辅导员说过，大学刚入学，每个同学的起点都差不多，但是四年毕业以后，每个人之间的差距会相当大...可是现在，我不禁想反驳：哪用得着四年？他妈的几个月就够了！
 
 说得过分点，很多人再学一个学期都赶不上我的。可是，不要跟差的人比啊。看看狗哥，看看Carl，看看那些明德奖学金的获得者，那些随随便便就碾压我的，我又要再学几年才赶得上？
 嗐，那谁知道喽？只能放低姿态，调整心态，多学一点是一点，与高人岂可交臂而失之？
 
 2022.3.10晚22：32
 时隔多天，终于把多项式相乘的合并同类项部分写出来了，还是相当复杂的。给班长讲了一些类和对象的题，希望他能懂。

 2022.3.11晚20：04
 昨晚发现CG平台发了一个程序设计实践作业，一共40道算法题，今天写了一天，还差不到10道，剩下的基本都是些一看就想放弃的题。
 写的好累，于是就打开了Github记录一下。
 再坚持一下，把这些题写完，我的暑假就开始了。
 
 2022 3.12晚22：44
 今天早上，终于把CG平台40道题写完了，不过严格来说，没有全写完，有3道题不会还不想去研究。
 无所谓了，已经很好了，歇几天吧，这两天写的太多了，再这么干要死人的。

 2022.3.15晚19：10
 刚才问了一下狗哥汉字乱码问题，通过高级保存选项成功解决了。
 
 2022.3.15晚23：45
 今晚力尽限速、断网、蓝屏等众多问题，最后终于在毛翔宇的指导下成功安装并打开了，希望以后可以正式开始Linux学习之路了。

 2022.3.16晚21：27
 今天傍晚终于把Linux操作系统安装好了，但确实感觉版本有点低，在CSDN搜教程的时候很多界面都不一样，有些功能也很麻烦。
 
 2022.3.17午15：30
 刷leetcode(外观数列)的时候，又学会了一个新函数：把整型数据转换成字符串型。
 语法：to_string(val);
 
 
